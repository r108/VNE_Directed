import numpy as np
import matplotlib.pyplot as plt

# evenly sampled time at 200ms intervals
#t = np.arange(0., 5., 0.2)
vnrs= [1,2,3,4,5,6,7,8,9]
#vnrs= [1,2,3,4,5,6,7,8,9]
#using dijkstra without memoization
no_memo_d_time=[0,0,0,0,2.6133956909179688,17.81799578666687,138.74196314811707,1358.1492443084717,14458.224873304367]
#dijkstra with memoization
d_time=[0.00872659683227539,0.033659934997558594,0.11036562919616699,0.311504602432251,1.8887910842895508,10.09040355682373 ,74.2046811580658,565.4632477760315,  5591.5319838523865]
#A* with memoization
a_time=[0.007623195648193359,0.018624305725097656,0.06850814819335938,0.2712976932525635,1.5130794048309326,9.150447130203247,60.69018793106079,519.8581795692444,4848.695182561874]
#A* with improved memoization
a_improved_time=[0.012537717819213867,0.019191265106201172,0.10453677177429199,0.2530391216278076,1.210869312286377,6.5150370597839355,40.85847330093384,347.50990200042725,3276.8753843307495]

#exhaustive search N! * N
perm = [0,4,18,96,600,4320,35280,322560,3265920]
#number of actually submitted embedding requests when using memoization
memo = [0,4,15,64,325,1956,13699,109600,986409]
#improved memo
improved_memo = [1,4,15,50,241,1279,8221,64038,569879]
# red dashes, blue squares and green triangles
plt.plot(vnrs, d_time, 'r-o', vnrs, a_improved_time, 'b-o', vnrs, no_memo_d_time, 'g-o')
#plt.plot(vnrs, memo, 'r^-', vnrs, perm, 'b^-')#, vnrs, no_memo_d_time, 'g-')
plt.show()
